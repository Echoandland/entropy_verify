{
  "Q1": {
    "o3": {
      "stage1_cates": "After reading each write-up, three fundamentally different lines of attack emerge.\n\nGroup A – Direct trigonometric-identity manipulations  \nSolutions: 1, 2, 3  \nAll three start from the numerical values of tan α (or sin α, cos α) and tan β and use ordinary trigonometric identities (addition formula, double–angle formula, or sin↔cos complements) to obtain a relation between α and β.  \n• Sol 1 applies the tangent–addition formula.  \n• Sol 2 evaluates candidate expressions with basic sine/cosine identities.  \n• Sol 3 recognises sin β = 2 sin α cos α and rewrites it as cos(π/2 – 2α).  \nAlthough their algebraic details differ, the common, high-level method is “standard trig identities.”\n\nGroup B – Complex-number (Euler form) approach  \nSolution: 4  \nHere the vectors 4 + 3i and 24 + 7i are written as 5e^{iA}, 25e^{iB}; multiplication of complex numbers (argument addition) is used to relate the angles. This is essentially a complex-number interpretation of trigonometry, distinct from the purely real-trig manipulations of Group A.\n\nGroup C – Synthetic geometry / cyclic quadrilateral & Ptolemy  \nSolution: 5  \nThis argument builds a cyclic quadrilateral, applies Ptolemy’s theorem, uses isosceles triangles and angle chasing to derive β = π/2 – 2α. It is a purely geometric, non-algebraic route, different from both Groups A and B.\n\nHence:\n\nGroup A: Solutions 1, 2, 3  \nGroup B: Solution 4  \nGroup C: Solution 5",
      "stage2_cates": "{1: \"Solution 1, Solution 2, Solution 3\", 2: \"Solution 4\", 3: \"Solution 5\"}",
      "cats": "[1,1,1,2,3]"
    }
  },
  "Q2": {
    "o3": {
      "stage1_cates": "High–level criteria used for grouping  \n1. Does the author turn 100 (or a higher power of 10) into a symbolic variable and manipulate the two products algebraically so that almost everything cancels?  \n2. Does the author simply carry out a convenient numerical multiplication to get the two full six-digit numbers and subtract?  \n3. Does the author avoid any real computation and instead work only with remainders (moduli) to pick the only possible choice?\n\nWith those criteria we get three fundamentally different approaches:\n\n──────────────────────────────────  \nGroup I  “Base-10 algebra / symbolic cancellation”  \n(Rewrite the factors in terms of 100 or 10 000, expand or factor, and watch the common parts cancel.)\n\n• Solution 1 – writes 9901 = 10 000 – 99 and 10101 = 10 000 + 101, expands, cancels.  \n• Solution 2 – writes 9901 = 99·100 + 1 and 10101 = 101·100 + 1, expands, cancels.  \nThese two are essentially the same kind of algebraic manipulation; they only differ in whether 100 or 10 000 is used.\n\n──────────────────────────────────  \nGroup II  “Difference–of–cubes identity (one carried out numerically)”\n\n• Solution 5 – sets x = 100 and observes (x+1)(x²–x+1)=x³+1, (x–1)(x²+x+1)=x³–1, then subtracts to get 2 (pure algebra).  \n• Solution 3 – performs exactly the same identity but plugs in x = 100 immediately, multiplying to 1 000 001 and 999 999 before subtracting (numerical version of the same idea).\n\n──────────────────────────────────  \nGroup III  “Modular arithmetic to rule out choices”\n\n• Solution 4 – looks mod 10, then mod 101 to narrow the answer set and select 2 without ever expanding the products.\n\n──────────────────────────────────  \nSummary of assignment  \nGroup I : Solutions 1, 2  \nGroup II: Solutions 3, 5  \nGroup III: Solution 4",
      "stage2_cates": "{1: \"Solution 1, Solution 2\", 2: \"Solution 3, Solution 5\", 3: \"Solution 4\"}",
      "cats": "[1,1,2,2,3]"
    }
  },
  "Q3": {
    "o3": {
      "stage1_cates": "High-level grouping criterion  \n• Does the author obtain the answer by explicitly/recursively moving the letters and summing the required adjacent swaps, or do they instead invoke a permutation-theory fact (the number of inversions equals the minimum adjacent swaps)?\n\nGroups\n\n1. “Step-by-step moving / arithmetic-series summation”  \n   – Solution 1 (moves A, then B, … add 5+4+3+2+1)  \n   – Solution 2 (recursive pattern 0,1,3,6,… → triangular numbers)  \n   – Solution 3 (recursive “move last letter to front” and sum 0+1+…+5)  \n   – Solution 4 (explicitly lists every swap in sequence, still totals 5+4+3+2+1)\n\n   These all share the same fundamental idea: regard each letter’s journey to its\n   final spot, count the adjacent swaps for that letter, and add the resulting\n   arithmetic series.\n\n2. “Permutation-inversions count”  \n   – Solution 5 (maps letters to numbers, counts inversions of 654321, notes that\n     the inversion count equals the minimum number of adjacent swaps)\n\n   This approach is conceptually different; it does not trace the moves but\n   relies on a combinatorial property of permutations.\n\nThus:  \nGroup 1 = {Solution 1, Solution 2, Solution 3, Solution 4}  \nGroup 2 = {Solution 5}",
      "stage2_cates": "{1: \"Solution 1, Solution 2, Solution 3, Solution 4\", 2: \"Solution 5\"}",
      "cats": "[1,1,1,1,2]"
    }
  },
  "Q4": {
    "o3": {
      "stage1_cates": "All five write the three original relations in the same algebraic form, but the way they proceed from there differs in a few fundamental ways.  \nThose differences fall naturally into three broad strategies:\n\n─────────────────────────────────────────  \nGroup 1 – “Find the whole triple (a, b, c) by factor-enumeration”  \n• Solution 1  \n• Solution 4  \n\nKey idea: Turn differences of the given equations into products such as  \n (a − c)(b − 1)=13, (b − a)(c − 1)=27, …, list all integer factor pairs, and test each until the unique triple (–9, –12, –8) is found. Only after the full triple is known is ab+bc+ac computed.\n\n─────────────────────────────────────────  \nGroup 2 – “Pin down b from two product equations, avoid solving for a and c”  \n• Solution 2  \n• Solution 3  \n\nKey idea: Form the two products  \n (a+c)(b+1)=187 and (a−c)(b−1)=13,  \nfind the common integer value of b by intersecting possible factor pairs (or by noticing (b+1)−(b−1)=2), obtain a+c, and then compute  \n ab+bc+ac = (100+87+60) − (a+b+c)  \nwithout ever determining a and c individually.\n\n─────────────────────────────────────────  \nGroup 3 – “Work backward from the answer choices”  \n• Solution 5  \n\nKey idea: Express the desired sum as 247 − (a+b+c), look at each multiple-choice option, infer what a+b+c would have to be, and eliminate options by quick numerical tests until only 276 remains.\n\nThus the five solutions fall into three distinct methodological groups:\n\n• Group 1: Solutions 1, 4  \n• Group 2: Solutions 2, 3  \n• Group 3: Solution 5",
      "stage2_cates": "{1: \"Solution 1, Solution 4\", 2: \"Solution 2, Solution 3\", 3: \"Solution 5\"}",
      "cats": "[1,2,2,1,3]"
    }
  },
  "Q5": {
    "o3": {
      "stage1_cates": "All five write-ups follow the same high-level line of attack, so they belong in a single group.\n\nCommon strategy  \n•  First work with the complement: look for the midpoint to fall in the missing (upper-right) unit square.  \n•  Realize this can happen only when one endpoint is chosen in the top square and the other in the right square; that configuration occurs with probability 2/9.  \n•  Conditioned on that configuration, use symmetry/geometry/coordinate integration to show the midpoint lands in the missing square with probability 1/4.  \n•  Multiply (2/9)(1/4)=1/18, take the complement 1–1/18, and arrive at 17/18 → 35.\n\nAlthough the details differ (some use an integral, others a symmetry argument or “upper-half of the diagonal”), the overarching method is identical: “use the complement and analyze the one critical corner case.” Hence there is just one conceptual group.\n\nGroup 1: Solutions 1, 2, 3, 4, 5",
      "stage2_cates": "{1: \"Solution 1, Solution 2, Solution 3, Solution 4, Solution 5\"}",
      "cats": "[1,1,1,1,1]"
    }
  }
}